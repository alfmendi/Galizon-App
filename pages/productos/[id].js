import { useEffect } from "react";

import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";

import { useDispatch } from "react-redux";

import styled from "@emotion/styled";

import Rating from "@mui/material/Rating";

import {
  addProductoCestaAction,
  cargarProductosDesdeLocalStorage,
} from "../../redux/cestaSlice";

import Header from "../../componentes/Header";

import ArrowBackIosNewIcon from "@mui/icons-material/ArrowBackIosNew";

// ------------------------------------------------------------------
// ------------------------------------------------------------------
// - Componente para mostrar la página un producto en concreto (id) -
// ------------------------------------------------------------------
// ------------------------------------------------------------------
const Producto = ({ producto }) => {
  const route = useRouter();

  const dispatch = useDispatch();

  // ------------------------------------------------------------------------------
  // - UseEffect para obtener los objetos de la cesta almacenados en localStorage -
  // - Estan almacenados en localStorage para no perder su valor                  -
  // - al hacer un refresh de la página (F5)                                      -
  // ------------------------------------------------------------------------------
  useEffect(() => {
    const productosLocalStorage = JSON.parse(localStorage.getItem("productos"));
    if (productosLocalStorage && productosLocalStorage.length > 0) {
      dispatch(
        cargarProductosDesdeLocalStorage(
          JSON.parse(localStorage.getItem("productos"))
        )
      );
    }
  }, []); // eslint-disable-line react-hooks/exhaustive-deps

  // --------------------------------------------------------------
  // - Función para añadir el producto a la cesta del store redux -
  // --------------------------------------------------------------
  const addProducto = () => {
    dispatch(addProductoCestaAction(producto));
  };

  // -------
  // - JSX -
  // -------
  return (
    <div>
      <Head>
        <title>Producto</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <Principal>
        <Tarjeta>
          <BotonVolver onClick={() => route.push("/")}>
            <ArrowBackIosNewIcon />
            Volver
          </BotonVolver>
          <Izquierda>
            <Image
              src={producto?.image}
              width={400}
              height={400}
              objectFit="contain"
              alt={producto?.title}
            />
          </Izquierda>
          <Derecha>
            <h4>{producto?.title}</h4>
            <Categoria>{producto?.category}</Categoria>
            <Valoracion>
              <Rating
                name="half-rating-read"
                defaultValue={producto?.rating.rate}
                precision={0.1}
                readOnly
              />
              <p>{producto?.rating.rate}</p>
              <p>
                ({producto?.rating.count}{" "}
                <span>
                  {producto?.rating.count === 1 ? "valoración" : "valoraciones"}
                  )
                </span>
              </p>
            </Valoracion>
            <Descripcion>{producto?.description}</Descripcion>
            <Precio>{producto?.price}€</Precio>
            <Boton onClick={addProducto}>Añadir a la cesta</Boton>
          </Derecha>
        </Tarjeta>
      </Principal>
    </div>
  );
};

export default Producto;

// ---------------------------------------------------------------------
// - Función para obtener el objeto (id) desde la API fakestoreapi.com -
// ---------------------------------------------------------------------
export const getServerSideProps = async (contexto) => {
  const producto = await fetch(
    `https://fakestoreapi.com/products/${contexto.query.id}`
  ).then((res) => res.json());

  return {
    props: {
      producto,
    },
  };
};

// ---------------------
// - Styled Components -
// ---------------------
const Principal = styled.main`
  display: flex;
  justify-content: center;
  align-items: center;
`;

const Tarjeta = styled.div`
  position: relative;
  width: 100%;
  /* max-width: 1536px; */
  max-width: 1200px;
  margin: 3rem 1rem 1rem 1rem;
  padding: 1rem;
  background: #fff;
  display: flex;
  gap: 1rem;

  /* Media Query para dispositivos móviles */
  @media (max-width: 480px) {
    flex-direction: column;
  }
`;

const BotonVolver = styled.button`
  font-family: "poppins";
  font-size: 12px;
  position: absolute;
  top: -36px;
  left: 0;
  border: none;
  border-radius: 3px;
  outline: none;
  cursor: pointer;
  background: #f3a847;
  padding: 0.2rem 0.5rem;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.2rem;
  transition: all 0.2s ease-in-out;

  svg {
    font-size: 1rem;
  }

  &:hover {
    box-shadow: 0 14px 26px -12px rgb(251 140 0 / 40%),
      0 4px 23px 0 rgb(251 140 0 / 15%), 0 8px 10px -5px rgb(251 140 0 / 20%);
  }
`;

const Izquierda = styled.div`
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
`;

const Derecha = styled.div`
  flex: 2;
  display: flex;
  flex-direction: column;
`;

const Categoria = styled.div`
  font-size: 12px;
  font-style: italic;
  color: #888;
  padding-bottom: 1rem;
`;

const Valoracion = styled.div`
  display: flex;
  justify-content: flex-start;
  align-items: center;
  gap: 0.5rem;
  padding-bottom: 0.5rem;
  border-bottom: 1px solid #ccc;

  p {
    font-size: 12px;
    font-weight: bold;
  }

  p > span,
  p:last-child {
    font-size: 10px;
    color: #666;
    font-weight: 500;
  }
`;

const Descripcion = styled.div`
  font-size: 12px;
  margin: 0.5rem 0;
`;

const Precio = styled.div`
  font-size: 16px;
  font-weight: bold;
  margin-bottom: 1rem;
`;

const Boton = styled.button`
  font-family: "poppins";
  font-size: 14px;
  margin-top: auto;
  border: none;
  outline: none;
  background: #f3a847;
  padding: 0.5rem;
  border-radius: 3px;
  cursor: pointer;
  transition: all 0.2s ease-in-out;

  &:hover {
    box-shadow: 0 14px 26px -12px rgb(251 140 0 / 40%),
      0 4px 23px 0 rgb(251 140 0 / 15%), 0 8px 10px -5px rgb(251 140 0 / 20%);
  }
`;
